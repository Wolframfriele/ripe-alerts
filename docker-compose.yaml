version: '3.4'

services:
  postgres:
    image: postgres
    hostname: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    # networks:
    #   - backend
    volumes:
      - ./data/postgress:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mongo:
    image: mongo
    hostname: mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    # networks:
    #   - mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
  
  ai_server:
    build: ./AnomolyDetectionServer
    hostname: ai_server
    restart: always
    depends_on: 
      - "mongo"
      - "postgres"
    environment:
      - MONGO_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    dns:
      - 8.8.8.8
      - 4.4.4.4
    # network_mode: "host"
    command: python manage.py runserver 0.0.0.0:8000
    # networks:
    #   - backend
    #   - mongo
    #   - test-host

  be_server:
    build: ./Backend
    hostname: be_server
    restart: always
    depends_on: 
    - "mongo"
    - "postgres"
    environment:
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    dns:
    - 8.8.8.8
    - 8.8.4.4
    # network_mode: "host"
    command: python manage.py runserver 0.0.0.0:8000
    # networks:
    #   - backend
    #   - test-host

# networks:
#   backend:
#     driver: ipvlan
#   mongo:
#     driver: ipvlan
#   test-host:
#     driver: host
