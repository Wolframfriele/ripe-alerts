# Generated by Django 3.2.9 on 2022-04-11 06:39

import database.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Anomaly',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('ip_address', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('measurement_type', models.CharField(choices=[('ping', 'Ping'), ('traceroute', 'Traceroute'), ('DNS', 'Dns'), ('HTTP', 'Http'), ('SSL', 'Ssl'), ('NTP', 'Ntp'), ('anchoring', 'Anchoring')], default=None, max_length=10, verbose_name=database.models.MeasurementType)),
                ('medium_value', models.FloatField()),
                ('value', models.FloatField()),
                ('anomaly_score', models.FloatField()),
                ('prediction_value', models.BooleanField()),
                ('asn_error', models.PositiveIntegerField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Anomalies',
            },
        ),
        migrations.CreateModel(
            name='AutonomousSystem',
            fields=[
                ('number', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Autonomous Systems',
            },
        ),
        migrations.CreateModel(
            name='DetectionMethod',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Detection Methods',
            },
        ),
        migrations.CreateModel(
            name='MeasurementCollection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('ping', 'Ping'), ('traceroute', 'Traceroute'), ('DNS', 'Dns'), ('HTTP', 'Http'), ('SSL', 'Ssl'), ('NTP', 'Ntp'), ('anchoring', 'Anchoring')], default=None, max_length=10, verbose_name=database.models.MeasurementType)),
                ('target', models.CharField(max_length=30)),
                ('autonomous_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.autonomoussystem')),
            ],
            options={
                'verbose_name_plural': 'Measurement Collections',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
                ('position', models.SmallIntegerField()),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.setting')),
            ],
        ),
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('probe', models.PositiveIntegerField()),
                ('as_number', models.PositiveIntegerField()),
                ('location', models.TextField(blank=True, null=True)),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.measurementcollection')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('config', models.TextField(blank=True, null=True)),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.setting')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurementPoint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('round_trip_time_ms', models.FloatField(null=True)),
                ('hops_total', models.PositiveSmallIntegerField()),
                ('probe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.probe')),
            ],
            options={
                'verbose_name_plural': 'Measurement Points',
            },
        ),
        migrations.AddField(
            model_name='measurementcollection',
            name='tag',
            field=models.ManyToManyField(to='database.Tag'),
        ),
        migrations.CreateModel(
            name='Hop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_hop', models.PositiveSmallIntegerField()),
                ('round_trip_time_ms', models.PositiveIntegerField()),
                ('as_number', models.PositiveIntegerField()),
                ('measurement_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.measurementpoint')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.BooleanField(blank=True, null=True)),
                ('anomaly', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.anomaly')),
            ],
            options={
                'verbose_name_plural': 'Feedback',
            },
        ),
        migrations.CreateModel(
            name='DetectionMethodSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detection_method', models.ManyToManyField(to='database.DetectionMethod')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.setting')),
            ],
            options={
                'verbose_name_plural': 'Detection Method Settings',
            },
        ),
        migrations.AddField(
            model_name='autonomoussystem',
            name='setting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.setting'),
        ),
        migrations.AddField(
            model_name='anomaly',
            name='autonomous_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.autonomoussystem'),
        ),
        migrations.AddField(
            model_name='anomaly',
            name='detection_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.detectionmethod'),
        ),
    ]
